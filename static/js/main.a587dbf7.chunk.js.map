{"version":3,"sources":["redux/constants.js","redux/reducers.js","redux/store.js","components/Input.jsx","components/Board.jsx","components/Header.jsx","pages/Boards.jsx","components/Card.jsx","pages/Cards.jsx","App.js","redux/actionCreator.js","index.js"],"names":["ADD_BOARD","DEL_BOARD","EDIT_BOARD","ADD_CARD","DEL_CARD","EDIT_CARD","ADD_ITEM","DEL_ITEM","CHANGE_FLAG","BOARDS","load","namespace","boards","length","preloadedState","rootReducer","combineReducers","state","action","console","log","type","concat","name","text","cards","filter","board","index","indexBoard","map","toString","newCard","items","newCards","card","indexCard","newItem","flag","item","indexItem","composeEnhancers","compose","store","createStore","applyMiddleware","save","Input","nameInput","add","useState","changeText","TextField","margin","autoFocus","label","variant","size","value","onChange","target","onKeyPress","key","adding","Board","del","edit","renderInput","render","CardContent","Grid","container","spacing","direction","justify","alignItems","xs","className","to","Typography","component","IconButton","onClick","Header","preChild","Boards","click","cliked","Button","color","useStyles","makeStyles","check","textDecoration","Card","delCard","addItem","delItem","changeFlag","editCard","classes","List","dense","ListItem","ListItemIcon","Checkbox","edge","checked","ListItemText","primary","ListItemSecondaryAction","aria-label","slice","CardActions","disableSpacing","Cards","addCard","id","useParams","App","this","props","AddBoard","DelBoard","AddCard","DelCard","AddItem","DelItem","ChangeFlag","EditBoard","EditCard","exact","path","Component","connect","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a587dbf7.chunk.js","sourcesContent":["export const ADD_BOARD = 'ADD_BOARD'\r\nexport const DEL_BOARD = 'DEL_BOARD'\r\nexport const EDIT_BOARD = 'EDIT_BOARD'\r\n\r\nexport const ADD_CARD = 'ADD_CARD'\r\nexport const DEL_CARD = 'DEL_CARD'\r\nexport const EDIT_CARD = 'EDIT_CARD'\r\n\r\nexport const ADD_ITEM = 'ADD_ITEM'\r\nexport const DEL_ITEM = 'DEL_ITEM'\r\nexport const EDIT_ITEM = 'EDIT_ITEM'\r\nexport const CHANGE_FLAG = 'CHANGE_FLAG'\r\n","import { combineReducers } from 'redux'\r\nimport {\r\n  ADD_BOARD,\r\n  DEL_BOARD,\r\n  EDIT_BOARD,\r\n  ADD_CARD,\r\n  DEL_CARD,\r\n  EDIT_CARD,\r\n  ADD_ITEM,\r\n  DEL_ITEM,\r\n  CHANGE_FLAG,\r\n} from './constants'\r\n\r\nimport { load } from 'redux-localstorage-simple'\r\n\r\nlet BOARDS = load({ namespace: 'trello' })\r\n\r\nif (!BOARDS || !BOARDS.boards || !BOARDS.boards.length) {\r\n  BOARDS = {\r\n    boards: [],\r\n  }\r\n}\r\n\r\nconst boards = (state = BOARDS.boards, action) => {\r\n  console.log(state)\r\n  console.log(action)\r\n  switch (action.type) {\r\n    //board\r\n\r\n    case ADD_BOARD:\r\n      return state.concat([{ name: action.text, cards: [] }])\r\n    case DEL_BOARD:\r\n      return state.filter((board, index) => index !== action.indexBoard)\r\n    case EDIT_BOARD:\r\n      return state.map((board, index) => {\r\n        if (index === action.indexBoard) {\r\n          return { name: action.text, cards: board.cards }\r\n        }\r\n        return board\r\n      })\r\n\r\n    //card\r\n\r\n    case ADD_CARD:\r\n      return state.map((board, index) => {\r\n        if (index.toString() === action.indexBoard) {\r\n          let newCard = [{ name: action.text, items: [] }]\r\n          let newCards = board.cards.concat(newCard)\r\n          return { name: board.name, cards: newCards }\r\n        }\r\n        return board\r\n      })\r\n\r\n    case DEL_CARD:\r\n      return state.map((board, index) => {\r\n        if (index.toString() === action.indexBoard) {\r\n          let newCards = board.cards.filter(\r\n            (card, index) => index !== action.indexCard\r\n          )\r\n          return { name: board.name, cards: newCards }\r\n        }\r\n        return board\r\n      })\r\n\r\n    case EDIT_CARD:\r\n      return state.map((board, index) => {\r\n        if (index.toString() === action.indexBoard) {\r\n          let newCards = board.cards.map((card, index) => {\r\n            if (index === action.indexCard) {\r\n              return { name: action.text, items: card.items }\r\n            }\r\n            return card\r\n          })\r\n          return { name: board.name, cards: newCards }\r\n        }\r\n        return board\r\n      })\r\n\r\n    //item\r\n\r\n    case ADD_ITEM:\r\n      return state.map((board, index) => {\r\n        if (index.toString() === action.indexBoard) {\r\n          let newCards = board.cards.map((card, index) => {\r\n            if (index === action.indexCard) {\r\n              let newItem = [\r\n                {\r\n                  text: action.text,\r\n                  flag: false,\r\n                },\r\n              ]\r\n              return { name: card.name, items: card.items.concat(newItem) }\r\n            }\r\n            return card\r\n          })\r\n          return { name: board.name, cards: newCards }\r\n        }\r\n        return board\r\n      })\r\n    case DEL_ITEM:\r\n      return state.map((board, index) => {\r\n        if (index.toString() === action.indexBoard) {\r\n          let newCards = board.cards.map((card, index) => {\r\n            if (index === action.indexCard) {\r\n              return {\r\n                name: card.name,\r\n                items: card.items.filter(\r\n                  (item, index) => index !== action.indexItem\r\n                ),\r\n              }\r\n            }\r\n            return card\r\n          })\r\n          return { name: board.name, cards: newCards }\r\n        }\r\n        return board\r\n      })\r\n\r\n    case CHANGE_FLAG:\r\n      return state.map((board, index) => {\r\n        if (index.toString() === action.indexBoard) {\r\n          let newCards = board.cards.map((card, index) => {\r\n            if (index === action.indexCard) {\r\n              return {\r\n                name: card.name,\r\n                items: card.items.map((item, index) => {\r\n                  if (index === action.indexItem) {\r\n                    return {\r\n                      text: item.text,\r\n                      flag: !item.flag,\r\n                    }\r\n                  }\r\n                  return item\r\n                }),\r\n              }\r\n            }\r\n            return card\r\n          })\r\n          return { name: board.name, cards: newCards }\r\n        }\r\n        return board\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({ boards })\r\n\r\nexport default rootReducer\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport { save } from 'redux-localstorage-simple'\r\n\r\nimport rootReducer from './reducers'\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV !== 'production' &&\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose\r\n/* eslint-enable */\r\n\r\nconst configureStore = (preloadedState) =>\r\n  createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(save({ namespace: 'trello' })))\r\n  )\r\n\r\nconst store = configureStore({})\r\n\r\nexport default store\r\n","import { useState } from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst Input = ({ nameInput, add }) => {\r\n  const [text, changeText] = useState('')\r\n  const handleChange = ({ target: { value } }) => changeText(value)\r\n  const adding = (text) => {\r\n    add(text)\r\n    changeText('')\r\n  }\r\n  const handlePress = ({ key }) => {\r\n    key === 'Enter' && text.length > 2 && adding(text)\r\n  }\r\n  return (\r\n    <TextField\r\n      margin={'dense'}\r\n      autoFocus={true}\r\n      label={nameInput}\r\n      variant=\"outlined\"\r\n      size=\"small\"\r\n      value={text}\r\n      onChange={handleChange}\r\n      onKeyPress={handlePress}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  IconButton,\r\n  Grid,\r\n} from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport Input from './Input'\r\n\r\nconst Board = ({ name, index, del, edit }) => {\r\n  const [renderInput, render] = useState(false)\r\n  const handleClick = () => render(!renderInput)\r\n  return (\r\n    <Card variant=\"outlined\">\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={10}>\r\n            <Link className=\"link\" to={`/board/${index}`}>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h5\" component=\"h2\">\r\n                    {name}\r\n                  </Typography>\r\n                  {renderInput && (\r\n                    <Input\r\n                      add={(text) => {\r\n                        edit(text)\r\n                        render(false)\r\n                      }}\r\n                      nameInput=\"Новое имя\"\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Link>\r\n          </Grid>\r\n\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={() => del(index)}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <IconButton onClick={handleClick}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  IconButton,\r\n  Grid,\r\n} from '@material-ui/core'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = ({ name, preChild }) => {\r\n  return (\r\n    <Card variant=\"outlined\">\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          spacing={preChild ? 1 : 0}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          {preChild && (\r\n            <Grid item>\r\n              <Link to=\"/boards\">\r\n                <IconButton>\r\n                  <ArrowBackIcon />\r\n                </IconButton>\r\n              </Link>\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {name}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { Grid, Button } from '@material-ui/core'\r\nimport Board from '../components/Board'\r\nimport Input from '../components/Input'\r\nimport { useState } from 'react'\r\nimport Header from '../components/Header'\r\n\r\nconst Boards = ({ boards, add, del, edit }) => {\r\n  const [click, cliked] = useState(false)\r\n  const handleClick = () => cliked(!click)\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\">\r\n      <Grid item xs={12}>\r\n        <Header name=\"Мои доски\" />\r\n      </Grid>\r\n      {boards.map(({ name }, index) => (\r\n        <Grid key={`${index}-${name}`} item xs={3}>\r\n          <Board\r\n            name={name}\r\n            index={index}\r\n            del={del}\r\n            edit={(text) => edit(text, index)}\r\n          />\r\n        </Grid>\r\n      ))}\r\n      <Grid item xs={3}>\r\n        <Button onClick={handleClick} variant=\"contained\" color=\"primary\">\r\n          Добавить доску\r\n        </Button>\r\n        {click && <Input nameInput=\"Имя доски\" add={add} />}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Boards\r\n","import {\r\n  Card as CardUI,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Checkbox,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Grid,\r\n  makeStyles,\r\n} from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Input from '../components/Input'\r\nimport { useState } from 'react'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nconst useStyles = makeStyles({\r\n  check: {\r\n    textDecoration: 'line-through',\r\n    color: '#bdbdbd',\r\n  },\r\n})\r\n\r\nconst Card = ({\r\n  name,\r\n  items,\r\n  delCard,\r\n  addItem,\r\n  delItem,\r\n  changeFlag,\r\n  editCard,\r\n}) => {\r\n  const [click, cliked] = useState(false)\r\n  const handleClick = () => cliked(!click)\r\n  const [renderInput, render] = useState(false)\r\n  const handleRender = () => render(!renderInput)\r\n\r\n  const classes = useStyles()\r\n  return (\r\n    <CardUI variant=\"outlined\">\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          spacing={0}\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={10}>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {name}\r\n            </Typography>\r\n            {renderInput && (\r\n              <Input\r\n                add={(text) => {\r\n                  editCard(text)\r\n                  render(false)\r\n                }}\r\n                nameInput=\"Новое имя\"\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={delCard}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <IconButton onClick={handleRender}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <List dense={true}>\r\n          {items.map(({ text, flag }, index) => (\r\n            <ListItem key={`${index}-${text.slice(6)}`}>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  edge=\"start\"\r\n                  checked={flag}\r\n                  onClick={() => changeFlag(index)}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText className={flag && classes.check} primary={text} />\r\n              <ListItemSecondaryAction>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    delItem(index)\r\n                  }}\r\n                  edge=\"end\"\r\n                  aria-label=\"delete\"\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        {click && <Input nameInput=\"Имя задачи\" add={addItem} />}\r\n        <CardActions disableSpacing={true}>\r\n          <Button onClick={handleClick} size=\"small\">\r\n            <p>Добавить задачу</p>\r\n          </Button>\r\n        </CardActions>\r\n      </CardContent>\r\n    </CardUI>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import { Grid, Button } from '@material-ui/core'\r\nimport Card from '../components/Card'\r\nimport { useParams } from 'react-router-dom'\r\nimport Header from '../components/Header'\r\nimport Input from '../components/Input'\r\nimport { useState } from 'react'\r\n\r\nconst Cards = ({\r\n  boards,\r\n  addCard,\r\n  delCard,\r\n  addItem,\r\n  delItem,\r\n  changeFlag,\r\n  editCard,\r\n}) => {\r\n  let { id } = useParams()\r\n  console.log(boards)\r\n  const { name, cards } = boards[id]\r\n  const [click, cliked] = useState(false)\r\n  const handleClick = () => cliked(!click)\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\">\r\n      <Grid item xs={12}>\r\n        <Header name={name} preChild={true} />\r\n      </Grid>\r\n      {cards.map(({ name, items }, index) => (\r\n        <Grid key={`${index}-${name}`} item xs={3}>\r\n          <Card\r\n            name={name}\r\n            items={items}\r\n            delCard={() => {\r\n              delCard(id, index)\r\n            }}\r\n            addItem={(text) => {\r\n              addItem(text, id, index)\r\n            }}\r\n            delItem={(indexItem) => {\r\n              delItem(id, index, indexItem)\r\n            }}\r\n            changeFlag={(indexItem) => {\r\n              changeFlag(id, index, indexItem)\r\n            }}\r\n            editCard={(text) => {\r\n              editCard(text, id, index)\r\n            }}\r\n          />\r\n        </Grid>\r\n      ))}\r\n      <Grid item xs={3}>\r\n        <Button onClick={handleClick} variant=\"contained\" color=\"primary\">\r\n          Добавить карту\r\n        </Button>\r\n        {click && (\r\n          <Input nameInput=\"Имя карты\" add={(text) => addCard(text, id)} />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Cards\r\n","import { connect } from 'react-redux'\r\nimport {\r\n  AddBoard,\r\n  DelBoard,\r\n  EditBoard,\r\n  AddCard,\r\n  DelCard,\r\n  EditCard,\r\n  AddItem,\r\n  DelItem,\r\n  ChangeFlag,\r\n} from './redux/actionCreator'\r\nimport { Component } from 'react'\r\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom'\r\nimport Boards from './pages/Boards'\r\nimport Cards from './pages/Cards'\r\nimport './styles.css'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const {\r\n      boards,\r\n      AddBoard,\r\n      DelBoard,\r\n      AddCard,\r\n      DelCard,\r\n      AddItem,\r\n      DelItem,\r\n      ChangeFlag,\r\n      EditBoard,\r\n      EditCard,\r\n    } = this.props\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact={true} path=\"/boards\">\r\n            <Boards\r\n              boards={boards}\r\n              add={AddBoard}\r\n              del={DelBoard}\r\n              edit={EditBoard}\r\n            />\r\n          </Route>\r\n          <Route exact={true} path=\"/board/:id\">\r\n            <Cards\r\n              boards={boards}\r\n              addCard={AddCard}\r\n              delCard={DelCard}\r\n              addItem={AddItem}\r\n              delItem={DelItem}\r\n              changeFlag={ChangeFlag}\r\n              editCard={EditCard}\r\n            />\r\n          </Route>\r\n          <Route\r\n            exact={true}\r\n            path=\"/\"\r\n            render={() => <Redirect to=\"/boards\" />}\r\n          />\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  ({ boards }) => ({\r\n    boards,\r\n  }),\r\n  {\r\n    AddBoard,\r\n    DelBoard,\r\n    EditBoard,\r\n    AddCard,\r\n    DelCard,\r\n    EditCard,\r\n    AddItem,\r\n    DelItem,\r\n    ChangeFlag,\r\n  }\r\n)(App)\r\n","import {\r\n  ADD_BOARD,\r\n  DEL_BOARD,\r\n  EDIT_BOARD,\r\n  ADD_CARD,\r\n  DEL_CARD,\r\n  EDIT_CARD,\r\n  ADD_ITEM,\r\n  DEL_ITEM,\r\n  CHANGE_FLAG,\r\n} from './constants'\r\n\r\n//board\r\n\r\nexport const AddBoard = (text) => ({\r\n  type: ADD_BOARD,\r\n  text,\r\n})\r\n\r\nexport const DelBoard = (indexBoard) => ({\r\n  type: DEL_BOARD,\r\n  indexBoard,\r\n})\r\n\r\nexport const EditBoard = (text, indexBoard) => ({\r\n  type: EDIT_BOARD,\r\n  indexBoard,\r\n  text,\r\n})\r\n\r\n//card\r\n\r\nexport const AddCard = (text, indexBoard) => ({\r\n  type: ADD_CARD,\r\n  text,\r\n  indexBoard,\r\n})\r\n\r\nexport const DelCard = (indexBoard, indexCard) => ({\r\n  type: DEL_CARD,\r\n  indexCard,\r\n  indexBoard,\r\n})\r\n\r\nexport const EditCard = (text, indexBoard, indexCard) => ({\r\n  type: EDIT_CARD,\r\n  text,\r\n  indexBoard,\r\n  indexCard,\r\n})\r\n\r\n//item\r\n\r\nexport const AddItem = (text, indexBoard, indexCard) => ({\r\n  type: ADD_ITEM,\r\n  text,\r\n  indexBoard,\r\n  indexCard,\r\n})\r\n\r\nexport const DelItem = (indexBoard, indexCard, indexItem) => ({\r\n  type: DEL_ITEM,\r\n  indexBoard,\r\n  indexCard,\r\n  indexItem,\r\n})\r\n\r\nexport const ChangeFlag = (indexBoard, indexCard, indexItem) => ({\r\n  type: CHANGE_FLAG,\r\n  indexBoard,\r\n  indexCard,\r\n  indexItem,\r\n})\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}